directive @contentSourceMaps on QUERY

"""
Indicates exactly one field must be supplied and this field must not be `null`.
"""
directive @oneOf on INPUT_OBJECT

"""Represents a binary file in a space. An asset can be any file type."""
type Asset {
  contentType(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  fileName(locale: String): String
  height(locale: String): Int
  linkedFrom(allowedLocales: [String]): AssetLinkingCollections
  size(locale: String): Int
  sys: Sys!
  title(locale: String): String
  url(locale: String, transform: ImageTransformOptions): String
  width(locale: String): Int
}

type AssetCollection {
  items: [Asset]!
  limit: Int!
  skip: Int!
  total: Int!
}

input AssetFilter {
  AND: [AssetFilter]
  OR: [AssetFilter]
  contentType: String
  contentType_contains: String
  contentType_exists: Boolean
  contentType_in: [String]
  contentType_not: String
  contentType_not_contains: String
  contentType_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  fileName: String
  fileName_contains: String
  fileName_exists: Boolean
  fileName_in: [String]
  fileName_not: String
  fileName_not_contains: String
  fileName_not_in: [String]
  height: Int
  height_exists: Boolean
  height_gt: Int
  height_gte: Int
  height_in: [Int]
  height_lt: Int
  height_lte: Int
  height_not: Int
  height_not_in: [Int]
  size: Int
  size_exists: Boolean
  size_gt: Int
  size_gte: Int
  size_in: [Int]
  size_lt: Int
  size_lte: Int
  size_not: Int
  size_not_in: [Int]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
  width: Int
  width_exists: Boolean
  width_gt: Int
  width_gte: Int
  width_in: [Int]
  width_lt: Int
  width_lte: Int
  width_not: Int
  width_not_in: [Int]
}

type AssetLinkingCollections {
  componentAuthorCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentAuthorCollection
  componentCaptionedImageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentCaptionedImageCollection
  componentFullWidthImageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentFullWidthImageCollection
  componentImageGalleryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentImageGalleryCollection
  componentRichImageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentRichImageCollection
  componentSeoCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentSeoCollection
  componentTextImageSideBySideCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentTextImageSideBySideCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageBlogPostCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageBlogPostCollection
  urlLinkCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): UrlLinkCollection
}

enum AssetOrder {
  contentType_ASC
  contentType_DESC
  fileName_ASC
  fileName_DESC
  height_ASC
  height_DESC
  size_ASC
  size_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  url_ASC
  url_DESC
  width_ASC
  width_DESC
}

"""
To have author-related properties [See type definition](https://app.contentful.com/spaces/lx69lkfzk4yq/content_types/componentAuthor)
"""
type ComponentAuthor implements Entry & _Node {
  _id: ID!
  avatar(locale: String, preview: Boolean): Asset
  contentfulMetadata: ContentfulMetadata!
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentAuthorLinkingCollections
  name(locale: String): String
  sys: Sys!
}

type ComponentAuthorCollection {
  items: [ComponentAuthor]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentAuthorFilter {
  AND: [ComponentAuthorFilter]
  OR: [ComponentAuthorFilter]
  avatar_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  sys: SysFilter
}

type ComponentAuthorLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ComponentAuthorOrder {
  internalName_ASC
  internalName_DESC
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
Component - Captioned Image   API Identifier: componentCaptionedImage    Fields:   1. Internal Name (Short text, required)   2. title (Short text, optional)      - Help text: "Optional heading for the image"   3. caption (Long text, required)      - Help text: "Description shown below the image"   4. image (Media, required)      - Validation: Accept only images [See type definition](https://app.contentful.com/spaces/lx69lkfzk4yq/content_types/componentCaptionedImage)
"""
type ComponentCaptionedImage implements Entry & _Node {
  _id: ID!
  caption(locale: String): ComponentCaptionedImageCaption
  contentfulMetadata: ContentfulMetadata!
  image(locale: String, preview: Boolean): Asset
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentCaptionedImageLinkingCollections
  sys: Sys!
  title(locale: String): String
}

type ComponentCaptionedImageCaption {
  json: JSON!
  links: ComponentCaptionedImageCaptionLinks!
}

type ComponentCaptionedImageCaptionAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ComponentCaptionedImageCaptionEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ComponentCaptionedImageCaptionLinks {
  assets: ComponentCaptionedImageCaptionAssets!
  entries: ComponentCaptionedImageCaptionEntries!
  resources: ComponentCaptionedImageCaptionResources!
}

type ComponentCaptionedImageCaptionResources {
  block: [ComponentCaptionedImageCaptionResourcesBlock!]!
  hyperlink: [ComponentCaptionedImageCaptionResourcesHyperlink!]!
  inline: [ComponentCaptionedImageCaptionResourcesInline!]!
}

type ComponentCaptionedImageCaptionResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ComponentCaptionedImageCaptionResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ComponentCaptionedImageCaptionResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type ComponentCaptionedImageCollection {
  items: [ComponentCaptionedImage]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentCaptionedImageFilter {
  AND: [ComponentCaptionedImageFilter]
  OR: [ComponentCaptionedImageFilter]
  caption_contains: String
  caption_exists: Boolean
  caption_not_contains: String
  contentfulMetadata: ContentfulMetadataFilter
  image_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type ComponentCaptionedImageLinkingCollections {
  componentImageGalleryWithCaptionsCollection(limit: Int = 100, locale: String, order: [ComponentCaptionedImageLinkingCollectionsComponentImageGalleryWithCaptionsCollectionOrder], preview: Boolean, skip: Int = 0): ComponentImageGalleryWithCaptionsCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ComponentCaptionedImageLinkingCollectionsComponentImageGalleryWithCaptionsCollectionOrder {
  columns_ASC
  columns_DESC
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ComponentCaptionedImageOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
ComponentFullWidthImage     - image: Media     - caption: Long text     - maxWidth: Short text (default/narrow/wide) [See type definition](https://app.contentful.com/spaces/lx69lkfzk4yq/content_types/componentFullWidthImage)
"""
type ComponentFullWidthImage implements Entry & _Node {
  _id: ID!
  caption(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  image(locale: String, preview: Boolean): Asset
  linkedFrom(allowedLocales: [String]): ComponentFullWidthImageLinkingCollections
  maxWidth(locale: String): String
  sys: Sys!
}

type ComponentFullWidthImageCollection {
  items: [ComponentFullWidthImage]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentFullWidthImageFilter {
  AND: [ComponentFullWidthImageFilter]
  OR: [ComponentFullWidthImageFilter]
  caption: String
  caption_contains: String
  caption_exists: Boolean
  caption_in: [String]
  caption_not: String
  caption_not_contains: String
  caption_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  image_exists: Boolean
  maxWidth: String
  maxWidth_contains: String
  maxWidth_exists: Boolean
  maxWidth_in: [String]
  maxWidth_not: String
  maxWidth_not_contains: String
  maxWidth_not_in: [String]
  sys: SysFilter
}

type ComponentFullWidthImageLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ComponentFullWidthImageOrder {
  maxWidth_ASC
  maxWidth_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
ComponentImageGallery     - images: Media (multiple)     - columns: Integer (2 o 3)     - caption: Long text [See type definition](https://app.contentful.com/spaces/lx69lkfzk4yq/content_types/componentImageGallery)
"""
type ComponentImageGallery implements Entry & _Node {
  _id: ID!
  caption(locale: String): String
  columns(locale: String): Int
  contentfulMetadata: ContentfulMetadata!
  imagesCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): AssetCollection
  linkedFrom(allowedLocales: [String]): ComponentImageGalleryLinkingCollections
  sys: Sys!
}

type ComponentImageGalleryCollection {
  items: [ComponentImageGallery]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentImageGalleryFilter {
  AND: [ComponentImageGalleryFilter]
  OR: [ComponentImageGalleryFilter]
  caption: String
  caption_contains: String
  caption_exists: Boolean
  caption_in: [String]
  caption_not: String
  caption_not_contains: String
  caption_not_in: [String]
  columns: Int
  columns_exists: Boolean
  columns_gt: Int
  columns_gte: Int
  columns_in: [Int]
  columns_lt: Int
  columns_lte: Int
  columns_not: Int
  columns_not_in: [Int]
  contentfulMetadata: ContentfulMetadataFilter
  imagesCollection_exists: Boolean
  sys: SysFilter
}

type ComponentImageGalleryLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ComponentImageGalleryOrder {
  caption_ASC
  caption_DESC
  columns_ASC
  columns_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
Component - Image Gallery With Captions   API Identifier: componentImageGalleryWithCaptions    Fields:   1. Internal Name (Short text, required)   2. columns (Integer, required)      - Default: 3      - Validation: Accept only 2 or 3   3. items (References, multiple, required)      - Validation: Accept only "Component - Captioned Image"      - Settings: Allow multiple values [See type definition](https://app.contentful.com/spaces/lx69lkfzk4yq/content_types/componentImageGalleryWithCaptions)
"""
type ComponentImageGalleryWithCaptions implements Entry & _Node {
  _id: ID!
  columns(locale: String): Int
  contentfulMetadata: ContentfulMetadata!
  internalName(locale: String): String
  itemsCollection(limit: Int = 100, locale: String, order: [ComponentImageGalleryWithCaptionsItemsCollectionOrder], preview: Boolean, skip: Int = 0, where: ComponentCaptionedImageFilter): ComponentImageGalleryWithCaptionsItemsCollection
  linkedFrom(allowedLocales: [String]): ComponentImageGalleryWithCaptionsLinkingCollections
  sys: Sys!
}

type ComponentImageGalleryWithCaptionsCollection {
  items: [ComponentImageGalleryWithCaptions]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentImageGalleryWithCaptionsFilter {
  AND: [ComponentImageGalleryWithCaptionsFilter]
  OR: [ComponentImageGalleryWithCaptionsFilter]
  columns: Int
  columns_exists: Boolean
  columns_gt: Int
  columns_gte: Int
  columns_in: [Int]
  columns_lt: Int
  columns_lte: Int
  columns_not: Int
  columns_not_in: [Int]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  items: cfComponentCaptionedImageNestedFilter
  itemsCollection_exists: Boolean
  sys: SysFilter
}

type ComponentImageGalleryWithCaptionsItemsCollection {
  items: [ComponentCaptionedImage]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum ComponentImageGalleryWithCaptionsItemsCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type ComponentImageGalleryWithCaptionsLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ComponentImageGalleryWithCaptionsOrder {
  columns_ASC
  columns_DESC
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
ComponentImpactMetrics    (contenedor de métricas)    Name: Component - Impact Metrics   API Identifier: componentImpactMetrics    Fields:   1. Internal Name (Short text, required)   2. metrics (References, multiple, required)      - Validation: Accept only "Component -   Metric"      - Settings: Allow multiple values (min:   2, max: 8) [See type definition](https://app.contentful.com/spaces/lx69lkfzk4yq/content_types/componentImpactMetrics)
"""
type ComponentImpactMetrics implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentImpactMetricsLinkingCollections
  metricsCollection(limit: Int = 100, locale: String, order: [ComponentImpactMetricsMetricsCollectionOrder], preview: Boolean, skip: Int = 0, where: ComponentMetricFilter): ComponentImpactMetricsMetricsCollection
  sys: Sys!
}

type ComponentImpactMetricsCollection {
  items: [ComponentImpactMetrics]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentImpactMetricsFilter {
  AND: [ComponentImpactMetricsFilter]
  OR: [ComponentImpactMetricsFilter]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  metrics: cfComponentMetricNestedFilter
  metricsCollection_exists: Boolean
  sys: SysFilter
}

type ComponentImpactMetricsLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

type ComponentImpactMetricsMetricsCollection {
  items: [ComponentMetric]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum ComponentImpactMetricsMetricsCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ComponentImpactMetricsOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
ComponentMetric (métrica    individual)    Name: Component - Metric   API Identifier: componentMetric    Fields:   1. Internal Name (Short text, required)   2. value (Short text, required)      - Help text: "The metric value (e.g.,   '200+', '2w → h', '0')"      - Validation: Max 20 characters   3. label (Short text, required)      - Help text: "Description of the metric   (e.g., 'Active users month 1')"      - Validation: Max 100 characters [See type definition](https://app.contentful.com/spaces/lx69lkfzk4yq/content_types/componentMetric)
"""
type ComponentMetric implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  internalName(locale: String): String
  label(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentMetricLinkingCollections
  sys: Sys!
  value(locale: String): String
}

type ComponentMetricCollection {
  items: [ComponentMetric]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentMetricFilter {
  AND: [ComponentMetricFilter]
  OR: [ComponentMetricFilter]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  label: String
  label_contains: String
  label_exists: Boolean
  label_in: [String]
  label_not: String
  label_not_contains: String
  label_not_in: [String]
  sys: SysFilter
  value: String
  value_contains: String
  value_exists: Boolean
  value_in: [String]
  value_not: String
  value_not_contains: String
  value_not_in: [String]
}

type ComponentMetricLinkingCollections {
  componentImpactMetricsCollection(limit: Int = 100, locale: String, order: [ComponentMetricLinkingCollectionsComponentImpactMetricsCollectionOrder], preview: Boolean, skip: Int = 0): ComponentImpactMetricsCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ComponentMetricLinkingCollectionsComponentImpactMetricsCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ComponentMetricOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
To describe an image used in rich text fields [See type definition](https://app.contentful.com/spaces/lx69lkfzk4yq/content_types/componentRichImage)
"""
type ComponentRichImage implements Entry & _Node {
  _id: ID!
  caption(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  fullWidth(locale: String): Boolean
  image(locale: String, preview: Boolean): Asset
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentRichImageLinkingCollections
  sys: Sys!
}

type ComponentRichImageCollection {
  items: [ComponentRichImage]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentRichImageFilter {
  AND: [ComponentRichImageFilter]
  OR: [ComponentRichImageFilter]
  caption: String
  caption_contains: String
  caption_exists: Boolean
  caption_in: [String]
  caption_not: String
  caption_not_contains: String
  caption_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  fullWidth: Boolean
  fullWidth_exists: Boolean
  fullWidth_not: Boolean
  image_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  sys: SysFilter
}

type ComponentRichImageLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ComponentRichImageOrder {
  caption_ASC
  caption_DESC
  fullWidth_ASC
  fullWidth_DESC
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
To have SEO-related properties to the pages we render [See type definition](https://app.contentful.com/spaces/lx69lkfzk4yq/content_types/componentSeo)
"""
type ComponentSeo implements Entry & _Node {
  _id: ID!
  canonicalUrl(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentSeoLinkingCollections
  nofollow(locale: String): Boolean
  noindex(locale: String): Boolean
  pageDescription(locale: String): String
  pageTitle(locale: String): String
  shareImagesCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): AssetCollection
  sys: Sys!
}

type ComponentSeoCollection {
  items: [ComponentSeo]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentSeoFilter {
  AND: [ComponentSeoFilter]
  OR: [ComponentSeoFilter]
  canonicalUrl: String
  canonicalUrl_contains: String
  canonicalUrl_exists: Boolean
  canonicalUrl_in: [String]
  canonicalUrl_not: String
  canonicalUrl_not_contains: String
  canonicalUrl_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  nofollow: Boolean
  nofollow_exists: Boolean
  nofollow_not: Boolean
  noindex: Boolean
  noindex_exists: Boolean
  noindex_not: Boolean
  pageDescription: String
  pageDescription_contains: String
  pageDescription_exists: Boolean
  pageDescription_in: [String]
  pageDescription_not: String
  pageDescription_not_contains: String
  pageDescription_not_in: [String]
  pageTitle: String
  pageTitle_contains: String
  pageTitle_exists: Boolean
  pageTitle_in: [String]
  pageTitle_not: String
  pageTitle_not_contains: String
  pageTitle_not_in: [String]
  shareImagesCollection_exists: Boolean
  sys: SysFilter
}

type ComponentSeoLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageBlogPostCollection(limit: Int = 100, locale: String, order: [ComponentSeoLinkingCollectionsPageBlogPostCollectionOrder], preview: Boolean, skip: Int = 0): PageBlogPostCollection
  pageLandingCollection(limit: Int = 100, locale: String, order: [ComponentSeoLinkingCollectionsPageLandingCollectionOrder], preview: Boolean, skip: Int = 0): PageLandingCollection
}

enum ComponentSeoLinkingCollectionsPageBlogPostCollectionOrder {
  internalName_ASC
  internalName_DESC
  publishedDate_ASC
  publishedDate_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ComponentSeoLinkingCollectionsPageLandingCollectionOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ComponentSeoOrder {
  canonicalUrl_ASC
  canonicalUrl_DESC
  internalName_ASC
  internalName_DESC
  nofollow_ASC
  nofollow_DESC
  noindex_ASC
  noindex_DESC
  pageTitle_ASC
  pageTitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
ComponentTextImageSideBySide     - text: Rich Text     - image: Media     - imagePosition: Short text (left/right)     - imageSize: Short text (small/medium/large) [See type definition](https://app.contentful.com/spaces/lx69lkfzk4yq/content_types/componentTextImageSideBySide)
"""
type ComponentTextImageSideBySide implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  image(locale: String, preview: Boolean): Asset
  imagePosition(locale: String): String
  imageSize(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentTextImageSideBySideLinkingCollections
  sys: Sys!
  text(locale: String): ComponentTextImageSideBySideText
}

type ComponentTextImageSideBySideCollection {
  items: [ComponentTextImageSideBySide]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentTextImageSideBySideFilter {
  AND: [ComponentTextImageSideBySideFilter]
  OR: [ComponentTextImageSideBySideFilter]
  contentfulMetadata: ContentfulMetadataFilter
  imagePosition: String
  imagePosition_contains: String
  imagePosition_exists: Boolean
  imagePosition_in: [String]
  imagePosition_not: String
  imagePosition_not_contains: String
  imagePosition_not_in: [String]
  imageSize: String
  imageSize_contains: String
  imageSize_exists: Boolean
  imageSize_in: [String]
  imageSize_not: String
  imageSize_not_contains: String
  imageSize_not_in: [String]
  image_exists: Boolean
  sys: SysFilter
  text_contains: String
  text_exists: Boolean
  text_not_contains: String
}

type ComponentTextImageSideBySideLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ComponentTextImageSideBySideOrder {
  imagePosition_ASC
  imagePosition_DESC
  imageSize_ASC
  imageSize_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type ComponentTextImageSideBySideText {
  json: JSON!
  links: ComponentTextImageSideBySideTextLinks!
}

type ComponentTextImageSideBySideTextAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type ComponentTextImageSideBySideTextEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type ComponentTextImageSideBySideTextLinks {
  assets: ComponentTextImageSideBySideTextAssets!
  entries: ComponentTextImageSideBySideTextEntries!
  resources: ComponentTextImageSideBySideTextResources!
}

type ComponentTextImageSideBySideTextResources {
  block: [ComponentTextImageSideBySideTextResourcesBlock!]!
  hyperlink: [ComponentTextImageSideBySideTextResourcesHyperlink!]!
  inline: [ComponentTextImageSideBySideTextResourcesInline!]!
}

type ComponentTextImageSideBySideTextResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type ComponentTextImageSideBySideTextResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type ComponentTextImageSideBySideTextResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type ContentfulMetadata {
  concepts: [TaxonomyConcept]!
  tags: [ContentfulTag]!
}

input ContentfulMetadataConceptsDescendantsFilter {
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

input ContentfulMetadataConceptsFilter {
  descendants: ContentfulMetadataConceptsDescendantsFilter
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

input ContentfulMetadataFilter {
  concepts: ContentfulMetadataConceptsFilter
  concepts_exists: Boolean
  tags: ContentfulMetadataTagsFilter
  tags_exists: Boolean
}

input ContentfulMetadataTagsFilter {
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

"""
Represents a tag entity for finding and organizing content easily.
      Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags
"""
type ContentfulTag {
  id: String
  name: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z,
    compliant with the 'date-time' format outlined in section 5.6 of
    the RFC 3339 profile of the ISO 8601 standard for representation
    of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`.
"""
scalar Dimension

interface Entry {
  contentfulMetadata: ContentfulMetadata!
  sys: Sys!
}

type EntryCollection {
  items: [Entry]!
  limit: Int!
  skip: Int!
  total: Int!
}

input EntryFilter {
  AND: [EntryFilter]
  OR: [EntryFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

enum EntryOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""The 'HexColor' type represents color in `rgb:ffffff` string format."""
scalar HexColor

enum ImageFormat {
  """AVIF image format."""
  AVIF

  """JPG image format."""
  JPG

  """
  Progressive JPG format stores multiple passes of an image in progressively higher detail.
          When a progressive image is loading, the viewer will first see a lower quality pixelated version which
          will gradually improve in detail, until the image is fully downloaded. This is to display an image as
          early as possible to make the layout look as designed.
  """
  JPG_PROGRESSIVE

  """PNG image format"""
  PNG

  """
  8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
          The 8-bit PNG format is mostly used for simple images, such as icons or logos.
  """
  PNG8

  """WebP image format."""
  WEBP
}

enum ImageResizeFocus {
  """Focus the resizing on the bottom."""
  BOTTOM

  """Focus the resizing on the bottom left."""
  BOTTOM_LEFT

  """Focus the resizing on the bottom right."""
  BOTTOM_RIGHT

  """Focus the resizing on the center."""
  CENTER

  """Focus the resizing on the largest face."""
  FACE

  """Focus the resizing on the area containing all the faces."""
  FACES

  """Focus the resizing on the left."""
  LEFT

  """Focus the resizing on the right."""
  RIGHT

  """Focus the resizing on the top."""
  TOP

  """Focus the resizing on the top left."""
  TOP_LEFT

  """Focus the resizing on the top right."""
  TOP_RIGHT
}

enum ImageResizeStrategy {
  """
  Crops a part of the original image to fit into the specified dimensions.
  """
  CROP

  """
  Resizes the image to the specified dimensions, cropping the image if needed.
  """
  FILL

  """Resizes the image to fit into the specified dimensions."""
  FIT

  """
  Resizes the image to the specified dimensions, padding the image if needed.
          Uses desired background color as padding color.
  """
  PAD

  """
  Resizes the image to the specified dimensions, changing the original aspect ratio if needed.
  """
  SCALE

  """Creates a thumbnail from the image."""
  THUMB
}

input ImageTransformOptions {
  """
  Desired background color, used with corner radius or `PAD` resize strategy.
          Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
  """
  backgroundColor: HexColor

  """
  Desired corner radius in pixels.
          Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
          Defaults to `0`. Uses desired background color as padding color,
          unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
  """
  cornerRadius: Int

  """Desired image format. Defaults to the original image format."""
  format: ImageFormat

  """Desired height in pixels. Defaults to the original image height."""
  height: Dimension

  """
  Desired quality of the image in percents.
          Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
  """
  quality: Quality

  """Desired resize focus area. Defaults to `CENTER`."""
  resizeFocus: ImageResizeFocus

  """Desired resize strategy. Defaults to `FIT`."""
  resizeStrategy: ImageResizeStrategy

  """Desired width in pixels. Defaults to the original image width."""
  width: Dimension
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
To create individual blog posts [See type definition](https://app.contentful.com/spaces/lx69lkfzk4yq/content_types/pageBlogPost)
"""
type PageBlogPost implements Entry & _Node {
  _id: ID!
  author(locale: String, preview: Boolean): Entry
  content(locale: String): PageBlogPostContent
  contentfulMetadata: ContentfulMetadata!
  featuredImage(locale: String, preview: Boolean): Asset
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): PageBlogPostLinkingCollections
  publishedDate(locale: String): DateTime
  relatedBlogPostsCollection(limit: Int = 100, locale: String, order: [PageBlogPostRelatedBlogPostsCollectionOrder], preview: Boolean, skip: Int = 0, where: PageBlogPostFilter): PageBlogPostRelatedBlogPostsCollection
  seoFields(locale: String, preview: Boolean, where: ComponentSeoFilter): ComponentSeo
  shortDescription(locale: String): String
  slug(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type PageBlogPostCollection {
  items: [PageBlogPost]!
  limit: Int!
  skip: Int!
  total: Int!
}

type PageBlogPostContent {
  json: JSON!
  links: PageBlogPostContentLinks!
}

type PageBlogPostContentAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type PageBlogPostContentEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type PageBlogPostContentLinks {
  assets: PageBlogPostContentAssets!
  entries: PageBlogPostContentEntries!
  resources: PageBlogPostContentResources!
}

type PageBlogPostContentResources {
  block: [PageBlogPostContentResourcesBlock!]!
  hyperlink: [PageBlogPostContentResourcesHyperlink!]!
  inline: [PageBlogPostContentResourcesInline!]!
}

type PageBlogPostContentResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type PageBlogPostContentResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type PageBlogPostContentResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

input PageBlogPostFilter {
  AND: [PageBlogPostFilter]
  OR: [PageBlogPostFilter]
  author_exists: Boolean
  content_contains: String
  content_exists: Boolean
  content_not_contains: String
  contentfulMetadata: ContentfulMetadataFilter
  featuredImage_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  publishedDate: DateTime
  publishedDate_exists: Boolean
  publishedDate_gt: DateTime
  publishedDate_gte: DateTime
  publishedDate_in: [DateTime]
  publishedDate_lt: DateTime
  publishedDate_lte: DateTime
  publishedDate_not: DateTime
  publishedDate_not_in: [DateTime]
  relatedBlogPosts: cfPageBlogPostNestedFilter
  relatedBlogPostsCollection_exists: Boolean
  seoFields: cfComponentSeoNestedFilter
  seoFields_exists: Boolean
  shortDescription: String
  shortDescription_contains: String
  shortDescription_exists: Boolean
  shortDescription_in: [String]
  shortDescription_not: String
  shortDescription_not_contains: String
  shortDescription_not_in: [String]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type PageBlogPostLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageBlogPostCollection(limit: Int = 100, locale: String, order: [PageBlogPostLinkingCollectionsPageBlogPostCollectionOrder], preview: Boolean, skip: Int = 0): PageBlogPostCollection
}

enum PageBlogPostLinkingCollectionsPageBlogPostCollectionOrder {
  internalName_ASC
  internalName_DESC
  publishedDate_ASC
  publishedDate_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum PageBlogPostOrder {
  internalName_ASC
  internalName_DESC
  publishedDate_ASC
  publishedDate_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type PageBlogPostRelatedBlogPostsCollection {
  items: [PageBlogPost]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum PageBlogPostRelatedBlogPostsCollectionOrder {
  internalName_ASC
  internalName_DESC
  publishedDate_ASC
  publishedDate_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
To have an entry point for the app (e.g. Homepage) [See type definition](https://app.contentful.com/spaces/lx69lkfzk4yq/content_types/pageLanding)
"""
type PageLanding implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  featuredBlogPost(locale: String, preview: Boolean): Entry
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): PageLandingLinkingCollections
  seoFields(locale: String, preview: Boolean, where: ComponentSeoFilter): ComponentSeo
  sys: Sys!
}

type PageLandingCollection {
  items: [PageLanding]!
  limit: Int!
  skip: Int!
  total: Int!
}

input PageLandingFilter {
  AND: [PageLandingFilter]
  OR: [PageLandingFilter]
  contentfulMetadata: ContentfulMetadataFilter
  featuredBlogPost_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  seoFields: cfComponentSeoNestedFilter
  seoFields_exists: Boolean
  sys: SysFilter
}

type PageLandingLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum PageLandingOrder {
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/lx69lkfzk4yq/content_types/projectDetails)
"""
type ProjectDetails implements Entry & _Node {
  _id: ID!
  company(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): ProjectDetailsLinkingCollections
  role(locale: String): String
  sys: Sys!
  tools(locale: String): String
}

type ProjectDetailsCollection {
  items: [ProjectDetails]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ProjectDetailsFilter {
  AND: [ProjectDetailsFilter]
  OR: [ProjectDetailsFilter]
  company: String
  company_contains: String
  company_exists: Boolean
  company_in: [String]
  company_not: String
  company_not_contains: String
  company_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  role: String
  role_contains: String
  role_exists: Boolean
  role_in: [String]
  role_not: String
  role_not_contains: String
  role_not_in: [String]
  sys: SysFilter
  tools: String
  tools_contains: String
  tools_exists: Boolean
  tools_in: [String]
  tools_not: String
  tools_not_contains: String
  tools_not_in: [String]
}

type ProjectDetailsLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ProjectDetailsOrder {
  company_ASC
  company_DESC
  role_ASC
  role_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  tools_ASC
  tools_DESC
}

"""
The 'Quality' type represents quality as whole numeric values between `1` and `100`.
"""
scalar Quality

type Query {
  _node(id: ID!, locale: String, preview: Boolean): _Node
  _nodes(ids: [ID!]!, locale: String, preview: Boolean): [_Node]!
  asset(id: String!, locale: String, preview: Boolean): Asset
  assetCollection(limit: Int = 100, locale: String, order: [AssetOrder], preview: Boolean, skip: Int = 0, where: AssetFilter): AssetCollection
  componentAuthor(id: String!, locale: String, preview: Boolean): ComponentAuthor
  componentAuthorCollection(limit: Int = 100, locale: String, order: [ComponentAuthorOrder], preview: Boolean, skip: Int = 0, where: ComponentAuthorFilter): ComponentAuthorCollection
  componentCaptionedImage(id: String!, locale: String, preview: Boolean): ComponentCaptionedImage
  componentCaptionedImageCollection(limit: Int = 100, locale: String, order: [ComponentCaptionedImageOrder], preview: Boolean, skip: Int = 0, where: ComponentCaptionedImageFilter): ComponentCaptionedImageCollection
  componentFullWidthImage(id: String!, locale: String, preview: Boolean): ComponentFullWidthImage
  componentFullWidthImageCollection(limit: Int = 100, locale: String, order: [ComponentFullWidthImageOrder], preview: Boolean, skip: Int = 0, where: ComponentFullWidthImageFilter): ComponentFullWidthImageCollection
  componentImageGallery(id: String!, locale: String, preview: Boolean): ComponentImageGallery
  componentImageGalleryCollection(limit: Int = 100, locale: String, order: [ComponentImageGalleryOrder], preview: Boolean, skip: Int = 0, where: ComponentImageGalleryFilter): ComponentImageGalleryCollection
  componentImageGalleryWithCaptions(id: String!, locale: String, preview: Boolean): ComponentImageGalleryWithCaptions
  componentImageGalleryWithCaptionsCollection(limit: Int = 100, locale: String, order: [ComponentImageGalleryWithCaptionsOrder], preview: Boolean, skip: Int = 0, where: ComponentImageGalleryWithCaptionsFilter): ComponentImageGalleryWithCaptionsCollection
  componentImpactMetrics(id: String!, locale: String, preview: Boolean): ComponentImpactMetrics
  componentImpactMetricsCollection(limit: Int = 100, locale: String, order: [ComponentImpactMetricsOrder], preview: Boolean, skip: Int = 0, where: ComponentImpactMetricsFilter): ComponentImpactMetricsCollection
  componentMetric(id: String!, locale: String, preview: Boolean): ComponentMetric
  componentMetricCollection(limit: Int = 100, locale: String, order: [ComponentMetricOrder], preview: Boolean, skip: Int = 0, where: ComponentMetricFilter): ComponentMetricCollection
  componentRichImage(id: String!, locale: String, preview: Boolean): ComponentRichImage
  componentRichImageCollection(limit: Int = 100, locale: String, order: [ComponentRichImageOrder], preview: Boolean, skip: Int = 0, where: ComponentRichImageFilter): ComponentRichImageCollection
  componentSeo(id: String!, locale: String, preview: Boolean): ComponentSeo
  componentSeoCollection(limit: Int = 100, locale: String, order: [ComponentSeoOrder], preview: Boolean, skip: Int = 0, where: ComponentSeoFilter): ComponentSeoCollection
  componentTextImageSideBySide(id: String!, locale: String, preview: Boolean): ComponentTextImageSideBySide
  componentTextImageSideBySideCollection(limit: Int = 100, locale: String, order: [ComponentTextImageSideBySideOrder], preview: Boolean, skip: Int = 0, where: ComponentTextImageSideBySideFilter): ComponentTextImageSideBySideCollection
  entryCollection(limit: Int = 100, locale: String, order: [EntryOrder], preview: Boolean, skip: Int = 0, where: EntryFilter): EntryCollection
  pageBlogPost(id: String!, locale: String, preview: Boolean): PageBlogPost
  pageBlogPostCollection(limit: Int = 100, locale: String, order: [PageBlogPostOrder], preview: Boolean, skip: Int = 0, where: PageBlogPostFilter): PageBlogPostCollection
  pageLanding(id: String!, locale: String, preview: Boolean): PageLanding
  pageLandingCollection(limit: Int = 100, locale: String, order: [PageLandingOrder], preview: Boolean, skip: Int = 0, where: PageLandingFilter): PageLandingCollection
  projectDetails(id: String!, locale: String, preview: Boolean): ProjectDetails
  projectDetailsCollection(limit: Int = 100, locale: String, order: [ProjectDetailsOrder], preview: Boolean, skip: Int = 0, where: ProjectDetailsFilter): ProjectDetailsCollection
  tldrSummary(id: String!, locale: String, preview: Boolean): TldrSummary
  tldrSummaryCollection(limit: Int = 100, locale: String, order: [TldrSummaryOrder], preview: Boolean, skip: Int = 0, where: TldrSummaryFilter): TldrSummaryCollection
  urlLink(id: String!, locale: String, preview: Boolean): UrlLink
  urlLinkCollection(limit: Int = 100, locale: String, order: [UrlLinkOrder], preview: Boolean, skip: Int = 0, where: UrlLinkFilter): UrlLinkCollection
}

interface ResourceLink {
  sys: ResourceSys!
}

type ResourceSys {
  linkType: String!
  urn: String!
}

type Sys {
  environmentId: String!
  firstPublishedAt: DateTime
  id: String!

  """The locale that was requested."""
  locale: String
  publishedAt: DateTime
  publishedVersion: Int
  spaceId: String!
}

input SysFilter {
  firstPublishedAt: DateTime
  firstPublishedAt_exists: Boolean
  firstPublishedAt_gt: DateTime
  firstPublishedAt_gte: DateTime
  firstPublishedAt_in: [DateTime]
  firstPublishedAt_lt: DateTime
  firstPublishedAt_lte: DateTime
  firstPublishedAt_not: DateTime
  firstPublishedAt_not_in: [DateTime]
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  publishedAt: DateTime
  publishedAt_exists: Boolean
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  publishedAt_in: [DateTime]
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  publishedAt_not: DateTime
  publishedAt_not_in: [DateTime]
  publishedVersion: Float
  publishedVersion_exists: Boolean
  publishedVersion_gt: Float
  publishedVersion_gte: Float
  publishedVersion_in: [Float]
  publishedVersion_lt: Float
  publishedVersion_lte: Float
  publishedVersion_not: Float
  publishedVersion_not_in: [Float]
}

"""
Represents a taxonomy concept entity for finding and organizing content easily.
        Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-concepts
"""
type TaxonomyConcept {
  id: String
}

"""
[See type definition](https://app.contentful.com/spaces/lx69lkfzk4yq/content_types/tldrSummary)
"""
type TldrSummary implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  context(locale: String): String
  goal(locale: String): String
  impact(locale: String): [String]
  linkedFrom(allowedLocales: [String]): TldrSummaryLinkingCollections
  role(locale: String): String
  sys: Sys!
}

type TldrSummaryCollection {
  items: [TldrSummary]!
  limit: Int!
  skip: Int!
  total: Int!
}

input TldrSummaryFilter {
  AND: [TldrSummaryFilter]
  OR: [TldrSummaryFilter]
  contentfulMetadata: ContentfulMetadataFilter
  context: String
  context_contains: String
  context_exists: Boolean
  context_in: [String]
  context_not: String
  context_not_contains: String
  context_not_in: [String]
  goal: String
  goal_contains: String
  goal_exists: Boolean
  goal_in: [String]
  goal_not: String
  goal_not_contains: String
  goal_not_in: [String]
  impact_contains_all: [String]
  impact_contains_none: [String]
  impact_contains_some: [String]
  impact_exists: Boolean
  role: String
  role_contains: String
  role_exists: Boolean
  role_in: [String]
  role_not: String
  role_not_contains: String
  role_not_in: [String]
  sys: SysFilter
}

type TldrSummaryLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum TldrSummaryOrder {
  goal_ASC
  goal_DESC
  role_ASC
  role_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
To link to another website demo [See type definition](https://app.contentful.com/spaces/lx69lkfzk4yq/content_types/url-link)
"""
type UrlLink implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  featuredImage(locale: String, preview: Boolean): Asset
  linkedFrom(allowedLocales: [String]): UrlLinkLinkingCollections
  publishDate(locale: String): DateTime
  slug(locale: String): String
  subtitle(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type UrlLinkCollection {
  items: [UrlLink]!
  limit: Int!
  skip: Int!
  total: Int!
}

input UrlLinkFilter {
  AND: [UrlLinkFilter]
  OR: [UrlLinkFilter]
  contentfulMetadata: ContentfulMetadataFilter
  featuredImage_exists: Boolean
  publishDate: DateTime
  publishDate_exists: Boolean
  publishDate_gt: DateTime
  publishDate_gte: DateTime
  publishDate_in: [DateTime]
  publishDate_lt: DateTime
  publishDate_lte: DateTime
  publishDate_not: DateTime
  publishDate_not_in: [DateTime]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  subtitle: String
  subtitle_contains: String
  subtitle_exists: Boolean
  subtitle_in: [String]
  subtitle_not: String
  subtitle_not_contains: String
  subtitle_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type UrlLinkLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum UrlLinkOrder {
  publishDate_ASC
  publishDate_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

interface _Node {
  _id: ID!
}

input cfComponentCaptionedImageNestedFilter {
  AND: [cfComponentCaptionedImageNestedFilter]
  OR: [cfComponentCaptionedImageNestedFilter]
  caption_contains: String
  caption_exists: Boolean
  caption_not_contains: String
  contentfulMetadata: ContentfulMetadataFilter
  image_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

input cfComponentMetricNestedFilter {
  AND: [cfComponentMetricNestedFilter]
  OR: [cfComponentMetricNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  label: String
  label_contains: String
  label_exists: Boolean
  label_in: [String]
  label_not: String
  label_not_contains: String
  label_not_in: [String]
  sys: SysFilter
  value: String
  value_contains: String
  value_exists: Boolean
  value_in: [String]
  value_not: String
  value_not_contains: String
  value_not_in: [String]
}

input cfComponentSeoNestedFilter {
  AND: [cfComponentSeoNestedFilter]
  OR: [cfComponentSeoNestedFilter]
  canonicalUrl: String
  canonicalUrl_contains: String
  canonicalUrl_exists: Boolean
  canonicalUrl_in: [String]
  canonicalUrl_not: String
  canonicalUrl_not_contains: String
  canonicalUrl_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  nofollow: Boolean
  nofollow_exists: Boolean
  nofollow_not: Boolean
  noindex: Boolean
  noindex_exists: Boolean
  noindex_not: Boolean
  pageDescription: String
  pageDescription_contains: String
  pageDescription_exists: Boolean
  pageDescription_in: [String]
  pageDescription_not: String
  pageDescription_not_contains: String
  pageDescription_not_in: [String]
  pageTitle: String
  pageTitle_contains: String
  pageTitle_exists: Boolean
  pageTitle_in: [String]
  pageTitle_not: String
  pageTitle_not_contains: String
  pageTitle_not_in: [String]
  shareImagesCollection_exists: Boolean
  sys: SysFilter
}

input cfPageBlogPostNestedFilter {
  AND: [cfPageBlogPostNestedFilter]
  OR: [cfPageBlogPostNestedFilter]
  author_exists: Boolean
  content_contains: String
  content_exists: Boolean
  content_not_contains: String
  contentfulMetadata: ContentfulMetadataFilter
  featuredImage_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  publishedDate: DateTime
  publishedDate_exists: Boolean
  publishedDate_gt: DateTime
  publishedDate_gte: DateTime
  publishedDate_in: [DateTime]
  publishedDate_lt: DateTime
  publishedDate_lte: DateTime
  publishedDate_not: DateTime
  publishedDate_not_in: [DateTime]
  relatedBlogPostsCollection_exists: Boolean
  seoFields_exists: Boolean
  shortDescription: String
  shortDescription_contains: String
  shortDescription_exists: Boolean
  shortDescription_in: [String]
  shortDescription_not: String
  shortDescription_not_contains: String
  shortDescription_not_in: [String]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}